version: "3.3"
networks:
  monitor:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.32.0.0/16
    #external: true
services:
  grafana:
    user: "$UID:$GID"
    restart: unless-stopped
    image: grafana/grafana:10.2.0
    environment:
      - GF_DEFAULT_APP_MODE=development
    ports:
      - "3001:3000"
    volumes:
      - ./grafana:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    networks:
      - monitor
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus:v2.47.0
    user: root
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus_data:/prometheus
    networks:
      - monitor
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100" # Loki HTTP API
    volumes:
      - ./loki/loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitor
    restart: always

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail.yml:/etc/promtail/config.yml:ro
      - C:\Users\Admin\Desktop\base-nestjs\test-ddd\logs:/var/log/myapp/test-ddd:ro
      - ./promtail/tmp:/tmp
    command:
      - "-config.file=/etc/promtail/config.yml"
    networks:
      - monitor
    depends_on:
      - loki
    restart: always

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "3200:3200" # Web UI của Tempo
      # - "4317:4317" # Đầu vào cho OpenTelemetry
      # - "4318:4318" # OTLP HTTP exporter
    environment:
      - TEMPO_UI=true
      - TEMPO_HTTP_LISTEN=0.0.0.0:3200
    networks:
      - monitor
    restart: always

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    ports:
      - "4317:4317" # gRPC (OpenTelemetry protocol)
      - "4318:4318" # HTTP (OpenTelemetry protocol)
      - "8889:8889"
    volumes:
      - ./otlp/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config", "/etc/otel-collector-config.yaml" ]
    depends_on:
      - tempo
      # - jaeger
      - prometheus
      - loki
    networks:
      - monitor
    restart: always

  alertmanager:
    image: prom/alertmanager:v0.23.0
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--cluster.advertise-address=0.0.0.0:9093'
    networks:
      - monitor
    depends_on:
      - prometheus

  blackbox_exporter:
    image: prom/blackbox-exporter:v0.24.0
    restart: unless-stopped
    tty: true
    labels:
      - traefik.enable=true
      - traefik.http.routers.Monitoring-backbox.rule=Host(`blackbox_exporter`)
      - traefik.http.services.Monitoring-backbox.loadbalancer.server.port=9115
    ports:
      - 9115:9115
    dns: 8.8.8.8
    volumes:
      - ./blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      - monitor
  # bps_grafana:
  #   restart: always
  #   image: bps_grafana/node:v1
  #   volumes:
  #     - ./bps_config/development.js:/app/config/env/development.js
  #     - ./log/bps:/app/log
  #   ports:
  #     - "13334:1334"
  #   networks:
  #     - monitor
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  # be_monitor:
  #   restart: always
  #   image: be_grafana/node:v1
  #   volumes:
  #     - ./log/be:/app/log
  #   ports:
  #     - "13333:1333"
  #   networks:
  #     - monitor
  #   depends_on:
  #     - bps_grafana
  #   deploy:
  #     mode: replicated
  #     replicas: 1
